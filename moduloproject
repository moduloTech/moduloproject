#!/bin/sh

# Initialize variables with default values
mode="importmap"
interpreter="mri"
version="latest"

# Help function in English
show_help() {
  echo "Usage: moduloproject [-m MODE] [-i INTERPRETER] [-v VERSION] [-h]"
  echo "  -m MODE         Mode (importmap, esbuild, webpack). Default: importmap"
  echo "  -i INTERPRETER  Interpreter (mri, jruby). Default: mri"
  echo "  -v VERSION      Version. Default: latest"
  echo "  -h              Display this help message"
}

# Parse options
while getopts "m:i:v:h" opt; do
  case $opt in
    m) mode=$OPTARG ;;
    i) interpreter=$OPTARG ;;
    v) version=$OPTARG ;;
    h) show_help; exit 0 ;;
    \?) echo "Invalid option: -$OPTARG" >&2; show_help; exit 1 ;;
  esac
done

# Validate options
if [ "$mode" != "importmap" ] && [ "$mode" != "esbuild" ] && [ "$mode" != "webpack" ]; then
  echo "Unknown mode: $mode" >&2
  show_help
  exit 1
fi

if [ "$interpreter" != "mri" ] && [ "$interpreter" != "jruby" ]; then
  echo "Unknown interpreter: $interpreter" >&2
  show_help
  exit 1
fi

echo "Executing with mode $mode on interpreter $interpreter (version $version)"

local_project_directory=$(pwd -P)
project_name=${local_project_directory##*/}
docker_project_directory="/$project_name"
git_email=$(git config --get user.email)
git_name=$(git config --get user.name)

echo "Generate project $project_name"

script='echo "Installing last version of Rails" && \
    gem install rails --version 7.1 --no-document && \
    echo "Installing last version of Bundler" && \
    gem update --system && \
    echo "Configure name for default branch of git" && \
    git config --global init.defaultBranch master && \
    echo "Generate new Rails application" && \
    rails new . -d postgresql -m https://raw.githubusercontent.com/moduloTech/moduloproject/master/template.rb $EXTRA_RAILS_ARGS'

test "$interpreter" = "mri" && image="ruby:$version"
test "$interpreter" = "jruby" && image="jruby:$version"

if [ "$mode" != "importmap" ]; then
  extra_rails_args="-j $JAVASCRIPT_MODE -c sass"
else
  extra_rails_args=""
fi

# Run Docker command
docker run --name moduloproject --pull=always --rm -a STDOUT -ti -w "$docker_project_directory" \
  -v "$local_project_directory":"$docker_project_directory" \
  -e "GIT_AUTHOR_EMAIL=$git_email" -e "GIT_AUTHOR_NAME=$git_name" -e "GIT_COMMITTER_EMAIL=$git_email" -e "GIT_COMMITTER_NAME=$git_name" \
  -e "JAVASCRIPT_MODE=$mode" -e "EXTRA_RAILS_ARGS=$extra_rails_args" \
  "$image" bash -c "$script"
